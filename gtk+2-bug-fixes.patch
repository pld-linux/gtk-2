diff -urN gtk+-2.6.0.orig/gtk/gtkaboutdialog.c gtk+-2.6.0/gtk/gtkaboutdialog.c
--- gtk+-2.6.0.orig/gtk/gtkaboutdialog.c	2004-12-21 08:34:36.826158600 +0000
+++ gtk+-2.6.0/gtk/gtkaboutdialog.c	2004-12-19 04:10:00.000000000 +0000
@@ -424,6 +424,7 @@
   priv->website = NULL;
   priv->website_label = NULL;
   priv->translator_credits = NULL;
+  priv->license = NULL;
   priv->authors = NULL;
   priv->documenters = NULL;
   priv->artists = NULL;
@@ -1439,7 +1440,7 @@
  * Returns the icon name displayed as logo in the about dialog.
  * 
  * Return value: the icon name displayed as logo. The string is
- *   owned by the about dialog. If you want to keep a reference
+ *   owned by the dialog. If you want to keep a reference
  *   to it, you have to call g_strdup() on it.
  *
  * Since: 2.6
@@ -1448,7 +1449,7 @@
 gtk_about_dialog_get_logo_icon_name (GtkAboutDialog *about)
 {
   GtkAboutDialogPrivate *priv;
-  const gchar *icon_name;
+  const gchar *icon_name = NULL;
   
   g_return_val_if_fail (GTK_IS_ABOUT_DIALOG (about), NULL);
 
diff -urN gtk+-2.6.0.orig/gtk/gtkactiongroup.c gtk+-2.6.0/gtk/gtkactiongroup.c
--- gtk+-2.6.0.orig/gtk/gtkactiongroup.c	2004-12-21 08:34:37.049124704 +0000
+++ gtk+-2.6.0/gtk/gtkactiongroup.c	2004-12-20 16:05:25.000000000 +0000
@@ -1076,6 +1076,9 @@
   
   g_return_val_if_fail (GTK_IS_ACTION_GROUP (action_group), string);
   
+  if (string == NULL)
+    return NULL;
+
   translate_func = action_group->private_data->translate_func;
   translate_data = action_group->private_data->translate_data;
   
diff -urN gtk+-2.6.0.orig/gtk/gtkfilechooserdefault.c gtk+-2.6.0/gtk/gtkfilechooserdefault.c
--- gtk+-2.6.0.orig/gtk/gtkfilechooserdefault.c	2004-12-21 08:34:36.814160424 +0000
+++ gtk+-2.6.0/gtk/gtkfilechooserdefault.c	2004-12-19 04:45:09.000000000 +0000
@@ -1617,6 +1617,8 @@
 static gboolean
 edited_idle_cb (GtkFileChooserDefault *impl)
 {
+  GDK_THREADS_ENTER ();
+  
   g_source_destroy (impl->edited_idle);
   impl->edited_idle = NULL;
 
@@ -1652,6 +1654,8 @@
       impl->edited_new_text = NULL;
     }
 
+  GDK_THREADS_LEAVE ();
+
   return FALSE;
 }
 
@@ -1977,7 +1981,7 @@
   gtk_tree_model_sort_convert_iter_to_child_iter (closure->impl->sort_model, &child_iter, iter);
 
   info = _gtk_file_system_model_get_info (closure->impl->browse_files_model, &child_iter);
-  is_folder = gtk_file_info_get_is_folder (info);
+  is_folder = info ? gtk_file_info_get_is_folder (info) : FALSE;
 
   closure->all_folders = closure->all_folders && is_folder;
   closure->all_files = closure->all_files && !is_folder;
@@ -2367,10 +2371,15 @@
 static gboolean
 shortcuts_drag_outside_idle_cb (GtkFileChooserDefault *impl)
 {
+  GDK_THREADS_ENTER ();
+  
   shortcuts_drag_set_delete_cursor (impl, TRUE);
   impl->shortcuts_drag_outside = TRUE;
 
   shortcuts_cancel_drag_outside_idle (impl);
+
+  GDK_THREADS_LEAVE ();
+
   return FALSE;
 }
 #endif
@@ -4232,6 +4241,8 @@
 {
   GtkFileChooserDefault *impl;
 
+  GDK_THREADS_ENTER ();
+
   impl = GTK_FILE_CHOOSER_DEFAULT (data);
   g_assert (impl->load_state == LOAD_LOADING);
   g_assert (impl->load_timeout_id != 0);
@@ -4242,6 +4253,8 @@
 
   load_set_model (impl);
 
+  GDK_THREADS_LEAVE ();
+
   return FALSE;
 }
 
@@ -5584,7 +5597,7 @@
 
       info = _gtk_file_system_model_get_info (impl->browse_files_model, &child_iter);
 
-      if (!gtk_file_info_get_is_folder (info))
+      if (info && !gtk_file_info_get_is_folder (info))
 	return FALSE;
     }
     
diff -urN gtk+-2.6.0.orig/gtk/gtkfilechooserentry.c gtk+-2.6.0/gtk/gtkfilechooserentry.c
--- gtk+-2.6.0.orig/gtk/gtkfilechooserentry.c	2004-12-21 08:34:36.800162552 +0000
+++ gtk+-2.6.0/gtk/gtkfilechooserentry.c	2004-12-19 04:45:09.000000000 +0000
@@ -391,15 +391,17 @@
   GtkFilePath *unique_path = NULL;
   gboolean valid;
 
+  GDK_THREADS_ENTER ();
+
   g_assert (chooser_entry->file_part);
 
   chooser_entry->check_completion_idle = NULL;
 
   if (strcmp (chooser_entry->file_part, "") == 0)
-    return FALSE;
+    goto done;
 
   if (chooser_entry->completion_store == NULL)
-    return FALSE;
+    goto done;
 
   valid = gtk_tree_model_get_iter_first (GTK_TREE_MODEL (chooser_entry->completion_store),
 					 &iter);
@@ -497,6 +499,10 @@
       g_free (common_prefix);
     }
 
+ done:
+
+  GDK_THREADS_LEAVE ();
+
   return FALSE;
 }
 
@@ -578,17 +584,19 @@
 {
   GSList *child_paths = NULL;
 
+  GDK_THREADS_ENTER ();
+
   chooser_entry->load_directory_idle = NULL;
 
   /* guard against bogus settings*/
   if (chooser_entry->current_folder_path == NULL ||
       chooser_entry->file_system == NULL)
-    return FALSE;
+    goto done;
 
   if (chooser_entry->current_folder != NULL)
     {
       g_warning ("idle activate multiple times without clearing the folder object first.");
-      return FALSE;
+      goto done;
     }
   g_assert (chooser_entry->completion_store == NULL);
 
@@ -600,7 +608,7 @@
 
   /* There is no folder by that name */
   if (!chooser_entry->current_folder)
-    return FALSE;
+    goto done;
   g_signal_connect (chooser_entry->current_folder, "files-added",
 		    G_CALLBACK (files_added_cb), chooser_entry);
   g_signal_connect (chooser_entry->current_folder, "files-removed",
@@ -625,6 +633,11 @@
 
   gtk_entry_completion_set_model (gtk_entry_get_completion (GTK_ENTRY (chooser_entry)),
 				  GTK_TREE_MODEL (chooser_entry->completion_store));
+
+ done:
+  
+  GDK_THREADS_LEAVE ();
+
   return FALSE;
 }
 
diff -urN gtk+-2.6.0.orig/gtk/gtkliststore.c gtk+-2.6.0/gtk/gtkliststore.c
--- gtk+-2.6.0.orig/gtk/gtkliststore.c	2004-12-21 08:34:37.995980760 +0000
+++ gtk+-2.6.0/gtk/gtkliststore.c	2004-12-20 17:15:11.000000000 +0000
@@ -1716,10 +1716,11 @@
 				  gint          column)
 
 {
-  GtkTreePath *tmp_path;
+  GtkTreePath *path;
 
-  tmp_path = gtk_tree_model_get_path (GTK_TREE_MODEL (list_store), iter);
-  gtk_tree_model_row_changed (GTK_TREE_MODEL (list_store), tmp_path, iter);
+  path = gtk_tree_model_get_path (GTK_TREE_MODEL (list_store), iter);
+  gtk_tree_model_row_changed (GTK_TREE_MODEL (list_store), path, iter);
+  gtk_tree_path_free (path);
 
   if (!iter_is_sorted (list_store, iter))
     {
@@ -1731,12 +1732,12 @@
                                   gtk_list_store_compare_func,
                                   list_store);
       order = generate_order (list_store->seq, old_positions);
+      path = gtk_tree_path_new ();
       gtk_tree_model_rows_reordered (GTK_TREE_MODEL (list_store),
-                                     tmp_path, NULL, order);
+                                     path, NULL, order);
+      gtk_tree_path_free (path);
       g_free (order);
     }
-
-  gtk_tree_path_free (tmp_path);
 }
 
 static gboolean
diff -urN gtk+-2.6.0.orig/gtk/gtkmessagedialog.c gtk+-2.6.0/gtk/gtkmessagedialog.c
--- gtk+-2.6.0.orig/gtk/gtkmessagedialog.c	2004-12-21 08:34:37.939989272 +0000
+++ gtk+-2.6.0/gtk/gtkmessagedialog.c	2004-12-20 15:50:45.000000000 +0000
@@ -174,7 +174,8 @@
   priv->has_primary_markup = FALSE;
   priv->has_secondary_text = FALSE;
   priv->secondary_label = gtk_label_new (NULL);
-
+  gtk_widget_set_no_show_all (priv->secondary_label, TRUE);
+  
   dialog->label = gtk_label_new (NULL);
   dialog->image = gtk_image_new_from_stock (NULL, GTK_ICON_SIZE_DIALOG);
   gtk_misc_set_alignment (GTK_MISC (dialog->image), 0.5, 0.0);
